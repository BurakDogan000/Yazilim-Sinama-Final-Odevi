<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="metroPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>